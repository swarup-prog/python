import pyttsx3
import datetime
import speech_recognition as sr
import wikipedia
import webbrowser
import os
import random
import smtplib
import pywhatkit

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
#print (voices[0].id)
engine.setProperty('voice', voices[0].id)

def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good Morning Sir!")
    
    elif hour>=12 and hour<17:
        speak("Good Afternoon Sir!")
    
    else: 
        speak("Good evening Sir!")
    
    speak("I am Jarvis. How may I help you?")

def takeCommand():
    #It takes microphone input from the user and returns string output

    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 1
        r.energy_threshold = 1000
        audio = r.listen(source)

    try:
        print("Recognizing...")
        query = r.recognize_google(audio, language='en')
        print(f"User said: {query}\n")

    except Exception as e:
        # print(e)
        print("Say that again please....")
        return "None"
    return query

"""
def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com',587)
    server.ehlo()
    server.starttls()
    f = open("E:\\Youtube Channel\\Office 2010 final\\Admin\\pas\\pass", 'r')
    server.login('lswarup1234@gmail.com', 'f')
    server.sendmail('lswarup980@gmail.com', to, content)
    server.close()
"""
if __name__ == "__main__":
    wishMe()
    while True:
        query = takeCommand().lower()

        # logic for executing tasks based on query
        if 'wikipedia' in query:
            speak('Searching wikipedia...')
            query = query.replace("wikipedia","")
            results = wikipedia.summary(query, 1)
            print(results)
            speak("According to wikipedia")
            speak (results)
    
        elif 'open youtube' in query:
            webbrowser.open("youtube.com")

        elif 'open google' in query:
            webbrowser.open("google.com")
        
        elif 'open facebook' in query:
            webbrowser.open("facebook.com")

        elif 'open stack overflow' in query:
            webbrowser.open("stackoverflow.com")

        elif 'play music' in query:
            music_dir = 'D:\\Music'
            songs = os.listdir(music_dir)
            print(songs)
            n = random.randint(0,12)
            os.startfile(os.path.join(music_dir, songs[n]))

        elif 'change music' in query:
            music_dir = 'D:\\Music'
            songs = os.listdir(music_dir)
            print(songs)
            n = random.randint(0,12)
            os.startfile(os.path.join(music_dir, songs[n]))
            speak('Is this okay sir?')
           
            """
            if 'yes' in query:
                speak('enjoy the music, Sir!')
            elif 'no' in query:
                music_dir = 'D:\\Music'
                songs = os.listdir(music_dir)
                print(songs)
                n = random.randint(0,12)
                os.startfile(os.path.join(music_dir, songs[n]))
                speak('Is this okay sir?')
            """
        
        elif 'time' in query:
            strTime = datetime.datetime.now().strftime('%I:%M %p')
            speak(f"Sir, the current time is {strTime}")

        elif 'play' in query:
            song = query.replace('play','')
            speak('Playing' + song) 
            pywhatkit.playonyt(song)

        elif 'open code editor' in query:
            codePath = "C:\\Users\\lenovo\\AppData\\Local\\Programs\\Microsoft VS Code\Code.exe"
            os.startfile(codePath)
        """
         elif 'send email' in query:
            try:
                speak("What should I say?")
                to = "lswarup980@gmail.com"
                sendEmail(to, content)
                speak("Your email has been sent!")
            except Exception as e:
                print(e)
                speak("Sorry Sir, I am not able to send the email!")
        """
        if 'quit' in query:
            speak("Quitting Sir! Thanks for your time.")
            exit()

